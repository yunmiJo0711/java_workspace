1. 변수 또는 메소드 이름은 개발자가 '저장하려는 데이터' 또는 '처리하는 기능' 의미에
맞는 단어를 선택한다.
예시: 맞은 단어의 갯수를 저장하는 변수이름 correct

2. while, for 문은 '명령들의 집합(1개 이상)' 을 반복하기 위함.

3. if문. 값이 저장된 상태를 판단하기 위해서 사용. 조건식이 필요.

4. 메소드 : 처리 기능
  
               입력    -->  처리(프로그램)    --> 출력

               입력(인자값)    -->  처리(메소드)    -->  리턴(int,double, String)
                                         처리(메소드)    -->  리턴 없음(void)

5. 메소드 호출  : 특정 메소드에 입력(인자) 을 주어서 결과를 얻고자 하는 코드
   메소드 정의  : 자주 사용되는 기능 또는 객체 요소로 활용할 기능을 미리 정의해
                     놓은 코드. (입력과 출력에  대한 형식 지정 필요) 

6. 메소드의 유형
	1) static 메소드 : main 메소드는 반드시 static 입니다.
			=> 클래스이름.메소드()

	2) 인스턴스 메소드 : 클래스의 구성 요소로 정의. 객체생성하여 호출
			=> 클래스의 인스턴스 변수(객체마다 다른값)를 다루는(활용) 메소드
			=> 객체변수.메소드()










